def scene_at(now)
{
  
  var camera = Cameras.perspective( [ "eye": pos(0,0,5),
                                      "look_at": pos(0,0,0) ] )
                                      
  var white = Materials.uniform( [ "ambient": Colors.white() * 0.1,
                                   "diffuse": Colors.white() * 0.8 ] )
  var black = Materials.uniform( [ "ambient": Colors.white() * 0.1,
                                   "diffuse": Colors.black() * 0.8 ] )
                                   
  var floor_material = Materials.horizontal_lines(0.5, black, white);

  var left_wall_material = Materials.uniform( [ "ambient": Colors.red() * 0.1,
                                                "diffuse": Colors.red() * 0.8 ] )

  var right_wall_material = Materials.uniform( [ "ambient": Colors.green() * 0.1,
                                                 "diffuse": Colors.green() * 0.8 ] )

  var back_wall_material = Materials.uniform( [ "ambient": Colors.blue() * 0.1,
                                                "diffuse": Colors.blue() * 0.8 ] )
                                      
  var meshmaterial = Materials.uniform( [ "ambient": Colors.yellow() * 0.2,
  									  	    "diffuse": Colors.red() * 0.8 ] )	
  									  	    
  var sphere_material = Materials.uniform( [ "ambient": Colors.blue() * 0.1,
                                             "diffuse": Colors.blue() * 0.8,
                                             "specular": Colors.white() * 0.8,
                                             "specular_exponent": 10,
                                             "transparency": 0.7,
                                             "refractive_index": 2.5 ] )
  
  var small_square_material = Materials.uniform( [ "ambient": Colors.white() * 0.1,
                                                   "diffuse": Colors.white() * 0.8,
                                                   "reflectivity": 0.0 ] )
  var ceiling_material = floor_material
  
  var angle = Animations.animate(degrees(0), degrees(360), seconds(5))
	
  var primitives = [];
  primitives.push_back(decorate( meshmaterial, rotate_around_y(angle[now], mesh("C:/Users/Brecht/Desktop/cube.obj")) ))
  primitives.push_back( translate(vec(0,-2,0), decorate(floor_material, xz_plane())) )
  primitives.push_back( translate(vec(0,2,0), decorate(ceiling_material, xz_plane())) )
  primitives.push_back( translate(vec(-2,0,0), decorate(left_wall_material, yz_plane())) )
  primitives.push_back( translate(vec(2,0,0), decorate(right_wall_material, yz_plane())) )
  primitives.push_back( translate(vec(0,0,-2), decorate(back_wall_material, xy_plane())) )
  
  var square_position = Animations.circular( [ "position": pos(0,0,1),
                                               "around": pos(0,0,0),
                                               "duration": seconds(5) ] )
                                               
  primitives.push_back( decorate( small_square_material, translate(square_position[now] - pos(0,0,0), scale(0.5, 0.5, 0.5, xy_square())) ) )
  primitives.push_back( decorate( sphere_material, translate(square_position[now] - pos(0,0,5), scale(0.5, 0.5, 0.5, sphere())) ) )
  
  var root = union(primitives);

  var pos1 = Animations.lissajous( [ "x_amplitude": 5,
                                     "x_frequency": 2,
                                     "z_amplitude": 5,
                                     "z_frequency": 1,
                                     "duration": seconds(5) ] )
  var pos2 = Animations.lissajous( [ "x_amplitude": 5,
                                     "x_frequency": 2,
                                     "x_phase": degrees(180),
                                     "z_amplitude": 5,
                                     "z_frequency": 1,
                                     "z_phase": degrees(180),
                                     "duration": seconds(5) ] )	
  
   var lights = [ Lights.spot( pos(-5,5,1), pos1[now], degrees(40), Colors.red() ),
                 Lights.spot( pos(5,5,1), pos2[now], degrees(40), Colors.green() ),
                 Lights.omnidirectional( pos(0,1.9,0), Colors.white() )]
  
  create_scene(camera, root, lights)
  
}

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.stratified(4,4),
                                     "ray_tracer": Raytracers.v6() ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(30),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )